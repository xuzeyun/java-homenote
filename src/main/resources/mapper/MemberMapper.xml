<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.homenote.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.example.homenote.domain.Member">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="life" jdbcType="INTEGER" property="life" />
    <result column="zodiac" jdbcType="VARCHAR" property="zodiac" />
    <result column="constellation" jdbcType="VARCHAR" property="constellation" />
    <result column="occupation" jdbcType="VARCHAR" property="occupation" />
    <result column="interest" jdbcType="VARCHAR" property="interest" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, nickname, sex, birthday, life, zodiac, constellation, occupation, interest, 
    contact, intro
  </sql>
  <select id="selectByExample" parameterType="com.example.homenote.domain.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.homenote.domain.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.homenote.domain.Member">
    insert into member (id, `name`, nickname, 
      sex, birthday, life, zodiac, 
      constellation, occupation, interest, 
      contact, intro)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{life,jdbcType=INTEGER}, #{zodiac,jdbcType=VARCHAR}, 
      #{constellation,jdbcType=VARCHAR}, #{occupation,jdbcType=VARCHAR}, #{interest,jdbcType=VARCHAR}, 
      #{contact,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.homenote.domain.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="life != null">
        life,
      </if>
      <if test="zodiac != null">
        zodiac,
      </if>
      <if test="constellation != null">
        constellation,
      </if>
      <if test="occupation != null">
        occupation,
      </if>
      <if test="interest != null">
        interest,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="intro != null">
        intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="life != null">
        #{life,jdbcType=INTEGER},
      </if>
      <if test="zodiac != null">
        #{zodiac,jdbcType=VARCHAR},
      </if>
      <if test="constellation != null">
        #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null">
        #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        #{interest,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.homenote.domain.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.life != null">
        life = #{record.life,jdbcType=INTEGER},
      </if>
      <if test="record.zodiac != null">
        zodiac = #{record.zodiac,jdbcType=VARCHAR},
      </if>
      <if test="record.constellation != null">
        constellation = #{record.constellation,jdbcType=VARCHAR},
      </if>
      <if test="record.occupation != null">
        occupation = #{record.occupation,jdbcType=VARCHAR},
      </if>
      <if test="record.interest != null">
        interest = #{record.interest,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{record.id,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      life = #{record.life,jdbcType=INTEGER},
      zodiac = #{record.zodiac,jdbcType=VARCHAR},
      constellation = #{record.constellation,jdbcType=VARCHAR},
      occupation = #{record.occupation,jdbcType=VARCHAR},
      interest = #{record.interest,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.homenote.domain.Member">
    update member
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="life != null">
        life = #{life,jdbcType=INTEGER},
      </if>
      <if test="zodiac != null">
        zodiac = #{zodiac,jdbcType=VARCHAR},
      </if>
      <if test="constellation != null">
        constellation = #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="occupation != null">
        occupation = #{occupation,jdbcType=VARCHAR},
      </if>
      <if test="interest != null">
        interest = #{interest,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.homenote.domain.Member">
    update member
    set `name` = #{name,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      life = #{life,jdbcType=INTEGER},
      zodiac = #{zodiac,jdbcType=VARCHAR},
      constellation = #{constellation,jdbcType=VARCHAR},
      occupation = #{occupation,jdbcType=VARCHAR},
      interest = #{interest,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>